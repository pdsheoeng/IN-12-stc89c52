C51 COMPILER V9.59.0.0   DS1302                                                            12/29/2023 10:19:26 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Obj\ds1302.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE App\ds1302\ds1302.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\App\24c02;.\App\ii
                    -c;.\App\key;.\App\smg;.\Public;.\App\ds18b20;.\App\ds1302) DEBUG OBJECTEXTEND PRINT(.\Obj\ds1302.lst) TABS(2) OBJECT(.\O
                    -bj\ds1302.obj)

line level    source

   1          #include "ds1302.h"
   2          #include "intrins.h"
   3          
   4          //---DS1302写入和读取时分秒的地址命令---//
   5          //---秒分时日月周年 最低位读写位;-------//
   6          u8 gREAD_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d}; 
   7          u8 gWRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
   8          
   9          //---DS1302时钟初始化2021年5月20日星期四13点51分47秒。---//
  10          //---存储顺序是秒分时日月周年,存储格式是用BCD码---//
  11          u8 gDS1302_TIME[7] = {0x00, 0x19, 0x10, 0x20, 0x04, 0x05, 0x21};
  12          //00000000  00000000  00000011  00100000  00000100  00000101  00100001
  13          //0100表示40 0111表示7；                      
  14          //00100011 首位为0采用24小时，第三位和第四位表示小时的十位，即10表2，后面4位表示小时的个位0011即3 
  15          /*******************************************************************************
  16          * 函 数 名       : ds1302_write_byte
  17          * 函数功能     : DS1302写单字节
  18          * 输    入       : addr：地址/命令
  19                     dat：数据
  20          * 输    出       : 无
  21          *******************************************************************************/
  22          void ds1302_write_byte(u8 addr,u8 dat)
  23          {
  24   1        u8 i=0;
  25   1        
  26   1        DS1302_RST=0;
  27   1        _nop_();  
  28   1        DS1302_CLK=0;//CLK低电平
  29   1        _nop_();
  30   1        DS1302_RST=1;//RST由低到高变化
  31   1        _nop_();
  32   1      
  33   1        for(i=0;i<8;i++)//循环8次，每次写1位，先写低位再写高位
  34   1        {
  35   2          DS1302_IO=addr&0x01;   //与运算
  36   2          addr>>=1;        //addr = addr向右位移
  37   2          DS1302_CLK=1;      //由低电平变成高电平时，读操作开始,这里需要注意的是，当CE由低变高时，SCLK需要处于低电平
  38   2          _nop_();
  39   2          DS1302_CLK=0;//CLK由低到高产生一个上升沿，从而写入数据
  40   2          _nop_();    
  41   2        }
  42   1        for(i=0;i<8;i++)//循环8次，每次写1位，先写低位再写高位
  43   1        {
  44   2          DS1302_IO=dat&0x01;
  45   2          dat>>=1;
  46   2          DS1302_CLK=1;
  47   2          _nop_();
  48   2          DS1302_CLK=0;
  49   2          _nop_();    
  50   2        }
  51   1        DS1302_RST=0;//RST拉低
  52   1        _nop_();  
  53   1      }
C51 COMPILER V9.59.0.0   DS1302                                                            12/29/2023 10:19:26 PAGE 2   

  54          
  55          /*******************************************************************************
  56          * 函 数 名       : ds1302_read_byte
  57          * 函数功能     : DS1302读单字节
  58          * 输    入       : addr：地址/命令
  59          * 输    出       : 读取的数据
  60          *******************************************************************************/
  61          u8 ds1302_read_byte(u8 addr)
  62          {
  63   1        u8 i=0;
  64   1        u8 temp=0;
  65   1        u8 value=0;
  66   1      
  67   1        DS1302_RST=0;
  68   1        _nop_();  
  69   1        DS1302_CLK=0;//CLK低电平
  70   1        _nop_();
  71   1        DS1302_RST=1;//RST由低到高变化
  72   1        _nop_();
  73   1        
  74   1        for(i=0;i<8;i++)//循环8次，每次写1位，先写低位再写高位
  75   1        {
  76   2          DS1302_IO=addr&0x01;
  77   2          addr>>=1; 
  78   2          DS1302_CLK=1;
  79   2          _nop_();
  80   2          DS1302_CLK=0;//CLK由低到高产生一个上升沿，从而写入数据
  81   2          _nop_();    
  82   2        }
  83   1        for(i=0;i<8;i++)//循环8次，每次读1位，先读低位再读高位
  84   1        {
  85   2          temp=DS1302_IO;    //DS1302_IO为sbit 
  86   2          value=(temp<<7)|(value>>1);//先将value右移1位，然后temp左移7位，最后或运算
  87   2          DS1302_CLK=1;
  88   2          _nop_();
  89   2          DS1302_CLK=0;
  90   2          _nop_();    
  91   2        }
  92   1        DS1302_RST=0;//RST拉低
  93   1        _nop_();  
  94   1        DS1302_CLK=1;//对于实物中，P3.4口没有外接上拉电阻的，此处代码需要添加，使数据口有一个上升沿脉冲。
  95   1        _nop_();
  96   1        DS1302_IO = 0;
  97   1        _nop_();
  98   1        DS1302_IO = 1;
  99   1        _nop_();  
 100   1        return value;   
 101   1      }
 102          
 103          /*******************************************************************************
 104          * 函 数 名       : ds1302_init
 105          * 函数功能     : DS1302初始化时间
 106          * 输    入       : 无
 107          * 输    出       : 无
 108          *******************************************************************************/
 109          void ds1302_init(void)
 110          {
 111   1        u8 i=0;
 112   1        ds1302_write_byte(0x8E,0X00); //关闭burst模式(一次性读出这七个寄存器的所有数据)
 113   1        for(i=0;i<7;i++)
 114   1        {
 115   2          ds1302_write_byte(gWRITE_RTC_ADDR[i],gDS1302_TIME[i]); //时间写入 
C51 COMPILER V9.59.0.0   DS1302                                                            12/29/2023 10:19:26 PAGE 3   

 116   2        }
 117   1        ds1302_write_byte(0x8E,0X80); //开起burst模式 
 118   1      }
 119          
 120          /*******************************************************************************
 121          * 函 数 名       : ds1302_read_time
 122          * 函数功能     : DS1302读取时间
 123          * 输    入       : 无
 124          * 输    出       : 无
 125          *******************************************************************************/
 126          void ds1302_read_time(void)
 127          {
 128   1        u8 i=0;
 129   1        for(i=0;i<7;i++)
 130   1        {
 131   2          gDS1302_TIME[i]=ds1302_read_byte(gREAD_RTC_ADDR[i]);  
 132   2        } 
 133   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    238    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     21    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
